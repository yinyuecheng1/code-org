---
<%
  require 'country_codes'
  require 'state_abbr'
  splat = request.splat_path_info[1..-1].split("/")
  country_code = splat.first
  country = country_name_from_code(country_code)
  if country_code == 'us'
    state_code = splat.last unless country_code == splat.last
    state = get_us_state_from_abbr(state_code) unless state_code.nil_or_empty?
  end
%>
title: <%= hoc_s(:events_all_title) %> - <%= state ? state : country %>
layout: wide
---
:ruby
  require pegasus_dir 'helper_modules/forms'
  require 'country_codes'
  require 'state_abbr'

  HOC_YEAR = 2015.freeze
  splat = request.splat_path_info[1..-1].split("/").map{ |a| Rack::Utils.escape_html(a) }
  country_code = splat.first
  # must sanitize country_code, which is untrusted user input from URL
  pass unless valid_country_code?(country_code)
  country = country_name_from_code(country_code)
  country = 'United States' if country == 'us'
  state_code = nil
  state_code = splat.last unless country_code == splat.last
  state = nil

  if country_code == 'us' && !state_code.nil_or_empty?
    # note state_code is untrusted user input from URL; however
    # get_us_state_from_abbr will return nil if not valid state code
    pass unless (state = get_us_state_from_abbr(state_code))
  else
    state_code = nil
  end

  results = Forms.events_by_name("HocSignup#{HOC_YEAR}", country_code, state_code)
  pass unless results.count > 0

%h1= hoc_s(:events_all_title) + ' â€” ' + (state ? state : country)

%ul
  -results.each do |event|
    %li{class: "hoc-event"}= "#{event[:name]}#{" (#{event[:city]})" unless event[:city].nil_or_empty?}"
